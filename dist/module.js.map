{"version":3,"sources":["../src/module.js"],"names":["CanvasPanelCtrl","_","moment","appEvents","DiscretePanelCtrl","$scope","$injector","$q","data","panelDefaults","rowHeight","timelineEnabled","timelineTextSize","timelineHeightPercent","timelineScaleColor","valueMaps","value","op","text","mappingTypes","name","rangeMaps","from","to","colorMaps","color","metricNameColor","valueTextColor","backgroundColor","lineColor","textSize","writeLastValue","writeAllValues","writeMetricNames","showLegend","showLegendNames","showLegendPercent","highlightOnMouseover","defaults","panel","externalPT","events","on","onInitEditMode","bind","onRender","onDataReceived","onDataError","onRefresh","updateColorInfo","err","console","log","addEditorTab","editorTabIndex","refresh","context","rect","wrap","getBoundingClientRect","rows","length","height","timelineRowHeight","valueRowHeight","width","canvas","ctx","lineWidth","textBaseline","font","top","elapsed","range","forEach","metric","centerV","fillStyle","fillRect","lastBS","point","changes","i","start","xt","Math","max","x","getColor","val","textAlign","fillText","current","minutes","seconds","hours","abc","xVal","beginPath","moveTo","lineTo","dashboard","formatDate","strokeStyle","stroke","mouse","position","down","next","ts","globalCompositeOperation","fill","xmin","min","xmax","arc","y","PI","pos","info","body","count","duration","ms","humanize","$tooltip","html","place_tt","pageX","pageY","detach","stats","isNumber","map","parseFloat","isNull","isNil","isString","toString","has","colorMap","palet","abs","hashCode","letters","split","floor","random","str","hash","char","charCodeAt","pt","end","res","valToInfo","tooManyValues","v","dataList","$","css","target","legendInfo","push","last","datapoints","norm","formatValue","_processLast","nullText","per","splice","round","index","indexOf","cm","m","render","what","randomColor","rangeMap","evt","time","panelRelY","showTT","isExternal","hover","j","hoverPoint","showTooltip","where","utc","timeSrv","setTime","clear","emit","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["import {CanvasPanelCtrl} from \"./canvas-metric\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\nimport appEvents from \"app/core/app_events\";\n\nclass DiscretePanelCtrl extends CanvasPanelCtrl {\n\n    constructor($scope, $injector, $q) {\n        super($scope, $injector, $q);\n\n        this.data = null;\n\n        // Set and populate defaults\n        var panelDefaults = {\n            rowHeight: 50,\n            timelineEnabled: true,\n            timelineTextSize: 20,\n            timelineHeightPercent: 50,\n            timelineScaleColor: '#FFFFFF',\n            valueMaps: [\n                {value: 'null', op: '=', text: 'N/A'}\n            ],\n            mappingTypes: [\n                {name: 'value to text', value: 1},\n                {name: 'range to text', value: 2},\n            ],\n            rangeMaps: [\n                {from: 'null', to: 'null', text: 'N/A'}\n            ],\n            colorMaps: [\n                {text: 'N/A', color: '#CCC'}\n            ],\n            metricNameColor: '#000000',\n            valueTextColor: '#000000',\n            backgroundColor: 'rgba(128, 128, 128, 0.1)',\n            lineColor: 'rgba(128, 128, 128, 1.0)',\n            textSize: 24,\n            writeLastValue: true,\n            writeAllValues: false,\n            writeMetricNames: false,\n            showLegend: true,\n            showLegendNames: true,\n            showLegendPercent: true,\n            highlightOnMouseover: true,\n        };\n        _.defaults(this.panel, panelDefaults);\n        this.externalPT = false;\n\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('render', this.onRender.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n        this.events.on('refresh', this.onRefresh.bind(this));\n\n        this.updateColorInfo();\n    }\n\n    onDataError(err) {\n        console.log(\"onDataError\", err);\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Options', 'public/plugins/natel-discrete-panel/editor.html', 1);\n        this.addEditorTab('Colors', 'public/plugins/natel-discrete-panel/colors.html', 3);\n        this.addEditorTab('Mappings', 'public/plugins/natel-discrete-panel/mappings.html', 4);\n        this.editorTabIndex = 1;\n        this.refresh();\n    }\n\n    onRender() {\n        if (this.data == null || !(this.context)) {\n            return;\n        }\n\n        //   console.log( 'render', this.data);\n\n        var rect = this.wrap.getBoundingClientRect();\n\n        var rows = this.data.length;\n        var rowHeight = this.panel.rowHeight;\n\n        var height = rowHeight * rows;\n\n\n        if (this.panel.timelineEnabled) {\n            var timelineRowHeight = rowHeight * (this.panel.timelineHeightPercent / 100);\n            var valueRowHeight = rowHeight - timelineRowHeight;\n        } else {\n            var valueRowHeight = rowHeight;\n        }\n\n\n        var width = rect.width;\n        this.canvas.width = width;\n        this.canvas.height = height;\n\n        var ctx = this.context;\n        ctx.lineWidth = 1;\n        ctx.textBaseline = 'middle';\n        ctx.font = this.panel.textSize + 'px \"Open Sans\", Helvetica, Arial, sans-serif';\n\n        // ctx.shadowOffsetX = 1;\n        // ctx.shadowOffsetY = 1;\n        // ctx.shadowColor = \"rgba(0,0,0,0.3)\";\n        // ctx.shadowBlur = 3;\n\n        var top = 0;\n\n        var elapsed = this.range.to - this.range.from;\n\n        _.forEach(this.data, (metric) => {\n            var centerV = top + (valueRowHeight / 2);\n\n            // The no-data line\n            ctx.fillStyle = this.panel.backgroundColor;\n            ctx.fillRect(0, top, width, rowHeight);\n\n            /*if(!this.panel.writeMetricNames) {\n             ctx.fillStyle = \"#111111\";\n             ctx.textAlign = 'left';\n             ctx.fillText(\"No Data\", 10, centerV);\n             }*/\n\n            var lastBS = 0;\n            var point = metric.changes[0];\n            for (var i = 0; i < metric.changes.length; i++) {\n                point = metric.changes[i];\n                if (point.start <= this.range.to) {\n                    var xt = Math.max(point.start - this.range.from, 0);\n                    point.x = (xt / elapsed) * width;\n                    ctx.fillStyle = this.getColor(point.val);\n                    ctx.fillRect(point.x, top, width, valueRowHeight);\n\n                    if (this.panel.writeAllValues) {\n                        ctx.fillStyle = this.panel.valueTextColor;\n                        ctx.textAlign = 'left';\n                        ctx.fillText(point.val, point.x + 7, centerV);\n                    }\n                    lastBS = point.x;\n                }\n            }\n\n            if (this.panel.timelineEnabled) {\n\n\n\n\n                //TODO Decide how to start\n                let current = moment(this.range.from);\n                current.minutes(0);\n                current.seconds(0);\n                current.hours(current.hours() + 1);\n\n                while (current <= this.range.to) {\n                    //1. Transform unix time to x coordinate,\n                    let abc = Math.max(current - this.range.from, 0);\n                    let xVal = ((abc / elapsed) * width);\n\n                    ctx.beginPath();\n                    ctx.moveTo(xVal, valueRowHeight);\n\n                    //TODO more generic check\n                    if (current.minutes() === 0) {\n                        ctx.lineTo(xVal, valueRowHeight + (timelineRowHeight / 3));\n\n                        //Draw time\n                        ctx.fillStyle = '#FFFFFF'\n                        ctx.font = '10px \"Open Sans\", Helvetica, Arial, sans-serif';\n                        ctx.textAlign = 'center';\n                        ctx.fillText(this.dashboard.formatDate(current, 'HH:mm'), xVal, rowHeight - 10 );\n\n                        ctx.font = this.panel.textSize + 'px \"Open Sans\", Helvetica, Arial, sans-serif';\n\n                    } else {\n                        ctx.lineTo(xVal, valueRowHeight + (timelineRowHeight / 3));\n                    }\n\n\n                    ctx.strokeStyle = this.panel.timelineScaleColor;\n                    ctx.stroke();\n\n                    current.minutes(current.minutes() + 30);\n                    //console.log(current.format())\n                }\n            }\n\n\n            if (top > 0) {\n                ctx.strokeStyle = this.panel.lineColor;\n                ctx.beginPath();\n                ctx.moveTo(0, top);\n                ctx.lineTo(width, top);\n                ctx.stroke();\n            }\n\n            ctx.fillStyle = \"#000000\";\n\n            if (this.panel.writeMetricNames && (!this.panel.highlightOnMouseover || (this.panel.highlightOnMouseover && (this.mouse.position == null || this.mouse.position.x > 200 ) ) )) {\n                ctx.fillStyle = this.panel.metricNameColor;\n                ctx.textAlign = 'left';\n                ctx.fillText(metric.name, 10, centerV);\n            }\n\n            ctx.textAlign = 'right';\n\n            if (this.mouse.down == null) {\n                if (this.panel.highlightOnMouseover && this.mouse.position != null) {\n                    point = metric.changes[0];\n                    var next = null;\n                    for (var i = 0; i < metric.changes.length; i++) {\n                        if (metric.changes[i].start > this.mouse.position.ts) {\n                            next = metric.changes[i];\n                            break;\n                        }\n                        point = metric.changes[i];\n                    }\n\n                    // Fill canvas using 'destination-out' and alpha at 0.05\n                    ctx.globalCompositeOperation = 'destination-out';\n                    ctx.fillStyle = \"rgba(255, 255, 255, 0.5)\";\n                    ctx.beginPath();\n                    ctx.fillRect(0, top, point.x, rowHeight);\n                    ctx.fill();\n\n                    if (next != null) {\n                        ctx.beginPath();\n                        ctx.fillRect(next.x, top, width, rowHeight);\n                        ctx.fill();\n                    }\n                    ctx.globalCompositeOperation = 'source-over';\n\n                    // Now Draw the value\n                    ctx.fillStyle = \"#000000\";\n                    ctx.textAlign = 'left';\n                    ctx.fillText(point.val, point.x + 7, centerV);\n                }\n                else if (this.panel.writeLastValue) {\n                    ctx.fillText(point.val, width - 7, centerV);\n                }\n            }\n\n            top += rowHeight;\n        });\n\n\n        if (this.mouse.position != null) {\n            if (this.mouse.down != null) {\n                var xmin = Math.min(this.mouse.position.x, this.mouse.down.x);\n                var xmax = Math.max(this.mouse.position.x, this.mouse.down.x);\n\n                // Fill canvas using 'destination-out' and alpha at 0.05\n                ctx.globalCompositeOperation = 'destination-out';\n                ctx.fillStyle = \"rgba(255, 255, 255, 0.6)\";\n                ctx.beginPath();\n                ctx.fillRect(0, 0, xmin, height);\n                ctx.fill();\n\n                ctx.beginPath();\n                ctx.fillRect(xmax, 0, width, height);\n                ctx.fill();\n                ctx.globalCompositeOperation = 'source-over';\n            }\n            else {\n                ctx.strokeStyle = '#111';\n                ctx.beginPath();\n                ctx.moveTo(this.mouse.position.x, 0);\n                ctx.lineTo(this.mouse.position.x, height);\n                ctx.lineWidth = 3;\n                ctx.stroke();\n\n                ctx.beginPath();\n                ctx.moveTo(this.mouse.position.x, 0);\n                ctx.lineTo(this.mouse.position.x, height);\n                ctx.strokeStyle = '#e22c14';\n                ctx.lineWidth = 2;\n                ctx.stroke();\n\n                if (this.externalPT && rows > 1) {\n                    ctx.beginPath();\n                    ctx.arc(this.mouse.position.x, this.mouse.position.y, 3, 0, 2 * Math.PI, false);\n                    ctx.fillStyle = '#e22c14';\n                    ctx.fill();\n                    ctx.lineWidth = 1;\n                    ctx.strokeStyle = '#111';\n                    ctx.stroke();\n                }\n            }\n        }\n    }\n\n\n    showLegandTooltip(pos, info) {\n        var body = '<div class=\"graph-tooltip-time\">' + info.val + '</div>';\n\n        body += \"<center>\";\n        if (info.count > 1) {\n            body += info.count + \" times<br/>for<br/>\";\n        }\n        body += moment.duration(info.ms).humanize();\n        if (info.count > 1) {\n            body += \"<br/>total\";\n        }\n        body += \"</center>\"\n\n        this.$tooltip.html(body).place_tt(pos.pageX + 20, pos.pageY);\n    }\n\n    clearTT() {\n        this.$tooltip.detach();\n    }\n\n    formatValue(val, stats) {\n\n        if (_.isNumber(val) && this.panel.rangeMaps) {\n            for (var i = 0; i < this.panel.rangeMaps.length; i++) {\n                var map = this.panel.rangeMaps[i];\n\n                // value/number to range mapping\n                var from = parseFloat(map.from);\n                var to = parseFloat(map.to);\n                if (to >= val && from <= val) {\n                    return map.text;\n                }\n            }\n        }\n\n        var isNull = _.isNil(val);\n        if (!isNull && !_.isString(val)) {\n            val = val.toString(); // convert everything to a string\n        }\n\n        for (var i = 0; i < this.panel.valueMaps.length; i++) {\n            var map = this.panel.valueMaps[i];\n            // special null case\n            if (map.value === 'null') {\n                if (isNull) {\n                    return map.text;\n                }\n                continue;\n            }\n\n            if (val == map.value) {\n                return map.text;\n            }\n        }\n\n        if (isNull) {\n            return \"null\";\n        }\n        return val;\n    }\n\n    getColor(val) {\n        if (_.has(this.colorMap, val)) {\n            return this.colorMap[val];\n        }\n\n        var palet = [\n            '#FF4444',\n            '#9933CC',\n            '#32D1DF',\n            '#ed2e18',\n            '#CC3900',\n            '#F79520',\n            '#33B5E5'\n        ];\n\n        return palet[Math.abs(this.hashCode(val + '')) % palet.length];\n    }\n\n    randomColor() {\n        var letters = 'ABCDE'.split('');\n        var color = '#';\n        for (var i = 0; i < 3; i++) {\n            color += letters[Math.floor(Math.random() * letters.length)];\n        }\n        return color;\n    }\n\n    hashCode(str) {\n        var hash = 0;\n        if (str.length == 0) return hash;\n        for (var i = 0; i < str.length; i++) {\n            var char = str.charCodeAt(i);\n            hash = ((hash << 5) - hash) + char;\n            hash = hash & hash; // Convert to 32bit integer\n        }\n        return hash;\n    }\n\n    //-----------\n\n    _processLast(pt, end, res, valToInfo) {\n        pt.ms = (end - pt.start);\n        if (!res.tooManyValues) {\n            if (_.has(valToInfo, pt.val)) {\n                var v = valToInfo[pt.val];\n                v.ms += pt.ms;\n                v.count++;\n            }\n            else {\n                valToInfo[pt.val] = {'val': pt.val, 'ms': pt.ms, 'count': 1};\n            }\n            res.tooManyValues = (valToInfo.length > 20);\n        }\n    }\n\n    onDataReceived(dataList) {\n        $(this.canvas).css('cursor', 'pointer');\n\n        var elapsed = this.range.to - this.range.from;\n        var data = [];\n        _.forEach(dataList, (metric) => {\n            var valToInfo = {};\n            var res = {\n                name: metric.target,\n                changes: [],\n                tooManyValues: false,\n                legendInfo: []\n            };\n            data.push(res);\n\n            var last = null;\n            _.forEach(metric.datapoints, (point) => {\n\n                var norm = this.formatValue(point[0]);\n                if (last == null || norm != last.val) {\n                    var pt = {\n                        val: norm,\n                        start: point[1],\n                        ms: 0 // time in this state\n                    }\n\n                    if (last != null) {\n                        this._processLast(last, pt.start, res, valToInfo);\n                    }\n                    ;\n\n                    res.changes.push(pt);\n                    last = pt;\n                }\n            });\n\n            if (last != null) {\n                this._processLast(last, this.range.to, res, valToInfo);\n            }\n            ;\n\n            // Remove null from the legend if it is the first value and small (common for influx queries)\n            var nullText = this.formatValue(null);\n            if (res.changes.length > 1 && _.has(valToInfo, nullText)) {\n                var info = valToInfo[nullText];\n                if (info.count == 1) {\n                    var per = (info.ms / elapsed);\n                    if (per < .02) {\n                        if (res.changes[0].val == nullText) {\n                            console.log('Removing null', info);\n                            delete valToInfo[nullText];\n\n                            res.changes[1].start = res.changes[0].start;\n                            res.changes[1].ms += res.changes[0].ms;\n                            res.changes.splice(0, 1);\n                        }\n                    }\n                }\n            }\n            _.forEach(valToInfo, (value) => {\n                value.per = Math.round((value.ms / elapsed) * 100);\n                res.legendInfo.push(value);\n            });\n        });\n        this.data = data;\n\n        this.onRender();\n\n        //console.log( 'data', dataList, this.data);\n    }\n\n    removeColorMap(map) {\n        var index = _.indexOf(this.panel.colorMaps, map);\n        this.panel.colorMaps.splice(index, 1);\n        this.updateColorInfo();\n    };\n\n    updateColorInfo() {\n        var cm = {};\n        for (var i = 0; i < this.panel.colorMaps.length; i++) {\n            var m = this.panel.colorMaps[i];\n            if (m.text) {\n                cm[m.text] = m.color;\n            }\n        }\n        this.colorMap = cm;\n        this.render();\n    }\n\n    addColorMap(what) {\n        if (what == 'curent') {\n            _.forEach(this.data, (metric) => {\n                if (metric.legendInfo) {\n                    _.forEach(metric.legendInfo, (info) => {\n                        if (!_.has(info.val)) {\n                            this.panel.colorMaps.push({text: info.val, color: this.getColor(info.val)});\n                        }\n                    });\n                }\n            });\n        }\n        else {\n            this.panel.colorMaps.push({text: '???', color: this.randomColor()});\n        }\n        this.updateColorInfo();\n    }\n\n    removeValueMap(map) {\n        var index = _.indexOf(this.panel.valueMaps, map);\n        this.panel.valueMaps.splice(index, 1);\n        this.render();\n    };\n\n    addValueMap() {\n        this.panel.valueMaps.push({value: '', op: '=', text: ''});\n    }\n\n    removeRangeMap(rangeMap) {\n        var index = _.indexOf(this.panel.rangeMaps, rangeMap);\n        this.panel.rangeMaps.splice(index, 1);\n        this.render();\n    };\n\n    addRangeMap() {\n        this.panel.rangeMaps.push({from: '', to: '', text: ''});\n    }\n\n    onConfigChanged() {\n        console.log(\"Config changed...\");\n        this.render();\n    }\n\n    //------------------\n    // Mouse Events\n    //------------------\n\n    showTooltip(evt, point) {\n        var from = point.start;\n        var to = point.start + point.ms;\n        var time = point.ms;\n        var val = point.val;\n\n        if (this.mouse.down != null) {\n            from = Math.min(this.mouse.down.ts, this.mouse.position.ts);\n            to = Math.max(this.mouse.down.ts, this.mouse.position.ts);\n            time = to - from;\n            val = \"Zoom To:\";\n        }\n\n        var body = '<div class=\"graph-tooltip-time\">' + val + '</div>';\n\n        body += \"<center>\"\n        body += this.dashboard.formatDate(moment(from)) + \"<br/>\";\n        body += \"to<br/>\";\n        body += this.dashboard.formatDate(moment(to)) + \"<br/><br/>\";\n        body += moment.duration(time).humanize() + \"<br/>\";\n        body += \"</center>\"\n\n        var rect = this.canvas.getBoundingClientRect();\n        var pageY = rect.top + (evt.pos.panelRelY * rect.height);\n\n        this.$tooltip.html(body).place_tt(evt.pos.pageX + 20, pageY);\n    };\n\n    onGraphHover(evt, showTT, isExternal) {\n        this.externalPT = false;\n        if (this.data) {\n            var hover = null;\n            var j = Math.floor(this.mouse.position.y / this.panel.rowHeight);\n            if (j < 0) {\n                j = 0;\n            }\n            if (j >= this.data.length) {\n                j = this.data.length - 1;\n            }\n            hover = this.data[j].changes[0];\n            for (var i = 0; i < this.data[j].changes.length; i++) {\n                if (this.data[j].changes[i].start > this.mouse.position.ts) {\n                    break;\n                }\n                hover = this.data[j].changes[i];\n            }\n            this.hoverPoint = hover;\n\n            if (showTT) {\n                this.showTooltip(evt, hover);\n                this.externalPT = isExternal;\n            }\n            this.onRender(); // refresh the view\n        }\n        else {\n            this.$tooltip.detach(); // make sure it is hidden\n        }\n    }\n\n    onMouseClicked(where) {\n        var pt = this.hoverPoint;\n        var range = {from: moment.utc(pt.start), to: moment.utc(pt.start + pt.ms)};\n        this.timeSrv.setTime(range);\n        this.clear();\n    }\n\n    onMouseSelectedRange(range) {\n        this.timeSrv.setTime(range);\n        this.clear();\n    }\n\n    clear() {\n        this.mouse.position = null;\n        this.mouse.down = null;\n        this.hoverPoint = null;\n        $(this.canvas).css('cursor', 'wait');\n        appEvents.emit('graph-hover-clear');\n        this.render();\n    }\n}\nDiscretePanelCtrl.templateUrl = 'module.html';\n\nexport {\n    DiscretePanelCtrl as PanelCtrl\n};\n\n\n"]}